import { render, screen } from "tests/react-utils";
import { PrintableReferralsReport } from "@/util/printReferrals";
import { Resource } from "@/types/resources";

describe("PrintableReferralsReport", () => {
  const mockResources: Resource[] = [
    {
      name: "Food Bank of Central Texas",
      addresses: ["6500 Metropolis Dr, Austin, TX 78744"],
      phones: ["(512) 684-2550"],
      emails: ["info@centraltexasfoodbank.org"],
      website: "https://www.centraltexasfoodbank.org",
      description: "Provides food assistance to families in need",
      justification: "Client needs food assistance",
    },
    {
      name: "Austin Community Health Center",
      addresses: [
        "123 Main St, Austin, TX 78701",
        "456 Oak Ave, Austin, TX 78702",
      ],
      phones: ["(512) 555-1234", "(512) 555-5678"],
      emails: ["contact@austinhealth.org", "info@austinhealth.org"],
      website: "https://www.austinhealth.org",
      description: "Affordable healthcare services for low-income families",
      justification: "Client needs healthcare access",
    },
  ];

  it("displays the header with organization name", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    expect(screen.getByText("Goodwill Central Texas")).toBeInTheDocument();
    expect(
      screen.getByText("GenAI Referral Tool - Client Referral Report"),
    ).toBeInTheDocument();
  });

  it("displays the generated date in the header", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    expect(screen.getByText(/Generated on/)).toBeInTheDocument();
  });

  it("displays all resources from the array", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    mockResources.forEach((resource) => {
      expect(screen.getByText(resource.name)).toBeInTheDocument();
    });
  });

  it("displays resource descriptions", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    mockResources.forEach((resource) => {
      // @ts-expect-error resources will be populated in this test
      expect(screen.getByText(resource.description)).toBeInTheDocument();
    });
  });

  it("displays resource addresses", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    mockResources.forEach((resource) => {
      resource.addresses?.forEach((address) => {
        // @ts-expect-error addresses will be populated in this test
        expect(screen.getByText(new RegExp(address))).toBeInTheDocument();
      });
    });
  });

  it("displays resource emails", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    mockResources.forEach((resource) => {
      resource.emails?.forEach((email) => {
        // @ts-expect-error emails will be populated in this test
        expect(screen.getByText(new RegExp(email))).toBeInTheDocument();
      });
    });
  });

  it("displays resource websites", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    mockResources.forEach((resource) => {
      expect(
        // @ts-expect-error website will be populated in this test
        screen.getByText(new RegExp(resource.website)),
      ).toBeInTheDocument();
    });
  });

  it("displays 'No resources found' when array is empty", () => {
    render(<PrintableReferralsReport resources={[]} />);

    expect(screen.getByText("No resources found.")).toBeInTheDocument();
  });

  it("displays footer text", () => {
    render(<PrintableReferralsReport resources={mockResources} />);

    expect(
      screen.getByText(
        "Report generated by Goodwill Central Texas GenAI Referral Tool",
      ),
    ).toBeInTheDocument();
  });
});
